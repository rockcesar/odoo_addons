<?xml version="1.0" encoding="utf-8"?>
<odoo>

        <template id="pinetwork" name="PiNetwork View">
          <t t-call="website.layout">
		<script type="text/javascript" src="/website_pinetwork_odoo/static/src/js/jquery-3.5.1.min.js"></script>
            	<script src="https://sdk.minepi.com/pi-sdk.js"></script>

            <input id="pi_donate" name="pi_donate" type="text" />
            <input id="button_click" name="button_click" value="Donate Pi" type="button"/>

            <br/><br/>
        <a href="https://github.com/rockcesar/PiNetworkDevelopments/">Watch code</a>. 
        URL:<br/>https://github.com/rockcesar/PiNetworkDevelopments/

        <script type="text/javascript">
            $( document ).ready(function() {
                const Pi = window.Pi;
                Pi.init({ version: "2.0" });

                async function auth() {
                    try {
                        // Identify the user with their username / unique network-wide ID, and get permission to request payments from them.
                        const scopes = ['username', 'payments'];
                        function onIncompletePaymentFound(payment) {
                            
                            var data = {
                                    'action': 'complete',
                                    'paymentId': payment.identifier,
                                    'txid': payment.transaction.txid,
                                    'app_client': 'auth_example'
                                };
                            return $.post( "https://latin-chain.com/server1.php", data).done(function(data) {
                                $("#button_click").prop( "disabled", false );
                            }).fail(function() {
                                $("#button_click").prop( "disabled", false );
                            });
                        }; // Read more about this in the SDK reference

                        Pi.authenticate(scopes, onIncompletePaymentFound).then(function(auth) {
                          $( "#button_click" ).click(function() {
                                if(parseFloat($("#pi_donate").val()) > 0)
                                {
                                    $("#button_click").prop( "disabled", true );
                                    /*setTimeout(function ()
                                    {
                                        $("#button_click").prop( "disabled", false );
                                    }, 10000);*/
                                    transfer();
                                }
                                //alert("Click");
                            });
                            //alert('Hello ' + auth.user.username);
                        }).catch(function(error) {
                          console.error(error);
                        });
                    } catch (err) {
                        alert(err);
                        // Not able to fetch the user
                    }
                }

                async function transfer() {
                    try {
                        const payment = Pi.createPayment({
                          // Amount of Ï€ to be paid:
                          amount: parseFloat($("#pi_donate").val()),
                          // An explanation of the payment - will be shown to the user:
                          memo: "Demo transfer request", // e.g: "Digital kitten #1234",
                          // An arbitrary developer-provided metadata object - for your own usage:
                          metadata: { paymentType: "donation" /* ... */ }, // e.g: { kittenId: 1234 }
                        }, {
                          // Callbacks you need to implement - read more about those in the detailed docs linked below:
                          onReadyForServerApproval: function(paymentId) {
                              var data = {
                                        'action': 'approve',
                                        'paymentId': paymentId,
                                        'txid': '',
                                        'app_client': 'auth_example'
                                    };
                              return $.post( "https://latin-chain.com/server1.php", data).done(function(data) {
                                    $("#button_click").prop( "disabled", false );
                                }).fail(function() {
                                    $("#button_click").prop( "disabled", false );
                                });
                          },
                          onReadyForServerCompletion: function(paymentId, txid) {
                                var data = {
                                    'action': 'complete',
                                    'paymentId': paymentId,
                                    "txid": txid,
                                    'app_client': 'auth_example'
                                };
                                return $.post( "https://latin-chain.com/server1.php", data).done(function(data) {
                                    $("#button_click").prop( "disabled", false );
                                }).fail(function() {
                                    $("#button_click").prop( "disabled", false );
                                });
                          },
                          onCancel: function(paymentId) { $("#button_click").prop( "disabled", false ); /* ... */ },
                          onError: function(error, payment) { $("#button_click").prop( "disabled", false ); /* ... */ },
                        });
                    } catch(err) {
                        $("#button_click").prop( "disabled", false );
                        alert(err);
                        // Technical problem (eg network failure). Please try again
                    }
                }

                auth();

            });
        </script>
          </t>
		</template>

</odoo>
